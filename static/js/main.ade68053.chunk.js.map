{"version":3,"sources":["utils/storeApi.js","components/List/Title.js","components/Card.js","components/Input/InputCard.js","components/Input/InputContainer.js","components/List/List.js","utils/store.js","App.js","reportWebVitals.js","index.js"],"names":["React","createContext","useStyle","makeStyles","theme","editableTitleContainer","margin","spacing","display","editableTitle","flexGrow","fontSize","fontWeight","input","background","Title","title","listId","useState","open","setOpen","newTitle","setNewTitle","updateListTitle","useContext","storeApi","classes","InputBase","onChange","e","target","value","autoFocus","inputProps","className","fullWidth","onBlur","Typography","onClick","card","padding","Card","index","draggableId","id","provided","ref","innerRef","dragHandleProps","draggableProps","Paper","width","paddingBottom","btnConfirm","color","fade","confirm","InputCard","type","addMoreCard","addMoreList","setTitle","multiline","placeholder","Button","IconButton","root","marginTop","addCard","backgroundColor","InputContainer","Collapse","in","elevation","minWidth","marginLeft","cardContainer","List","list","CssBaseline","droppableId","porvided","droppableProps","cards","map","data","lists","listIds","minHeight","overflowY","App","store","setData","Provider","console","log","newCard","uuid","newState","newListId","newList","onDragEnd","result","destination","source","sourceList","destinationList","draggingCard","filter","splice","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ade68053.chunk.js","sourcesContent":["import React from \"react\";\r\nexport default React.createContext(null);\r\n","import React, { useContext, useState } from \"react\";\r\nimport { Typography, InputBase } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\r\nimport storeApi from \"../../utils/storeApi\";\r\n\r\nconst useStyle = makeStyles((theme) => ({\r\n  editableTitleContainer: {\r\n    margin: theme.spacing(1),\r\n    display: \"flex\",\r\n  },\r\n  editableTitle: {\r\n    flexGrow: 1,\r\n    fontSize: \"1.2rem\",\r\n    fontWeight: \"bold\",\r\n  },\r\n  input: {\r\n    fontSize: \"1.2rem\",\r\n    fontWeight: \"bold\",\r\n    margin: theme.spacing(1),\r\n    \"&:focus\": {\r\n      background: \"#ddd\",\r\n    },\r\n  },\r\n}));\r\nexport default function Title({ title, listId }) {\r\n  const [open, setOpen] = useState(false);\r\n  const [newTitle, setNewTitle] = useState(title);\r\n  const { updateListTitle } = useContext(storeApi);\r\n  const classes = useStyle();\r\n  const handleOnChange = (e) => {\r\n    setNewTitle(e.target.value);\r\n  };\r\n\r\n  const handleOnBlur = () => {\r\n    updateListTitle(newTitle, listId);\r\n    setOpen(false);\r\n  };\r\n  return (\r\n    <div>\r\n      {open ? (\r\n        <div>\r\n          <InputBase\r\n            onChange={handleOnChange}\r\n            autoFocus\r\n            value={newTitle}\r\n            inputProps={{\r\n              className: classes.input,\r\n            }}\r\n            fullWidth\r\n            onBlur={handleOnBlur}\r\n          />\r\n        </div>\r\n      ) : (\r\n        <div className={classes.editableTitleContainer}>\r\n          <Typography\r\n            onClick={() => setOpen(!open)}\r\n            className={classes.editableTitle}\r\n          >\r\n            {title}\r\n          </Typography>\r\n          <MoreHorizIcon />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Paper } from \"@material-ui/core\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Draggable } from \"react-beautiful-dnd\";\r\n\r\nconst useStyle = makeStyles((theme) => ({\r\n  card: {\r\n    padding: theme.spacing(1, 1, 1, 2),\r\n    margin: theme.spacing(1),\r\n  },\r\n}));\r\nexport default function Card({ card, index }) {\r\n  const classes = useStyle();\r\n\r\n  return (\r\n    <Draggable draggableId={card.id} index={index}>\r\n      {(provided) => (\r\n        <div\r\n          ref={provided.innerRef}\r\n          {...provided.dragHandleProps}\r\n          {...provided.draggableProps}\r\n        >\r\n          <Paper className={classes.card}>{card.title}</Paper>\r\n        </div>\r\n      )}\r\n    </Draggable>\r\n  );\r\n}\r\n","import React, { useContext, useState } from \"react\";\r\nimport { Paper, InputBase, Button, IconButton } from \"@material-ui/core\";\r\nimport ClearIcon from \"@material-ui/icons/Clear\";\r\nimport { makeStyles, fade } from \"@material-ui/core/styles\";\r\nimport storeApi from \"../../utils/storeApi\";\r\n\r\nconst useStyle = makeStyles((theme) => ({\r\n  card: {\r\n    width: \"280px\",\r\n    margin: theme.spacing(0, 1, 1, 1),\r\n    paddingBottom: theme.spacing(4),\r\n  },\r\n  input: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  btnConfirm: {\r\n    background: \"#5AAC44\",\r\n    color: \"#fff\",\r\n    \"&:hover\": {\r\n      background: fade(\"#5AAC44\", 0.75),\r\n    },\r\n  },\r\n  confirm: {\r\n    margin: theme.spacing(0, 1, 1, 1),\r\n  },\r\n}));\r\nexport default function InputCard({ setOpen, listId, type }) {\r\n  const classes = useStyle();\r\n  const { addMoreCard, addMoreList } = useContext(storeApi);\r\n  const [title, setTitle] = useState(\"\");\r\n\r\n  const handleOnChange = (e) => {\r\n    setTitle(e.target.value);\r\n  };\r\n  const handleBtnConfirm = () => {\r\n    if (type === \"card\") {\r\n      addMoreCard(title, listId);\r\n      setTitle(\"\");\r\n      setOpen(false);\r\n    } else {\r\n      addMoreList(title);\r\n      setTitle(\"\");\r\n      setOpen(false);\r\n    }\r\n  };\r\n  return (\r\n    <div>\r\n      <div>\r\n        <Paper className={classes.card}>\r\n          <InputBase\r\n            onChange={handleOnChange}\r\n            multiline\r\n            fullWidth\r\n            inputProps={{\r\n              className: classes.input,\r\n            }}\r\n            value={title}\r\n            placeholder={\r\n              type === \"card\"\r\n                ? \"Enter a title of this card..\"\r\n                : \"Enter list title...\"\r\n            }\r\n          />\r\n        </Paper>\r\n      </div>\r\n      <div className={classes.confirm}>\r\n        <Button className={classes.btnConfirm} onClick={handleBtnConfirm}>\r\n          {type === \"card\" ? \"Add Card\" : \"Add List\"}\r\n        </Button>\r\n        <IconButton onClick={() => setOpen(false)}>\r\n          <ClearIcon />\r\n        </IconButton>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Paper, Typography, Collapse } from \"@material-ui/core\";\r\nimport { makeStyles, fade } from \"@material-ui/core/styles\";\r\nimport InputCard from \"./InputCard\";\r\n\r\nconst useStyle = makeStyles((theme) => ({\r\n  root: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  addCard: {\r\n    padding: theme.spacing(1, 1, 1, 2),\r\n    margin: theme.spacing(0, 1, 1, 1),\r\n    background: \"#EBECF0\",\r\n    \"&:hover\": {\r\n      backgroundColor: fade(\"#000\", 0.25),\r\n    },\r\n  },\r\n}));\r\nexport default function InputContainer({ listId, type }) {\r\n  const classes = useStyle();\r\n  const [open, setOpen] = useState(false);\r\n  return (\r\n    <div className={classes.root}>\r\n      <Collapse in={open}>\r\n        <InputCard setOpen={setOpen} listId={listId} type={type} />\r\n      </Collapse>\r\n      <Collapse in={!open}>\r\n        <Paper\r\n          className={classes.addCard}\r\n          elevation={0}\r\n          onClick={() => setOpen(!open)}\r\n        >\r\n          <Typography>\r\n            {type === \"card\" ? \"+ Add Card\" : \"+ Add List\"}\r\n          </Typography>\r\n        </Paper>\r\n      </Collapse>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Paper, CssBaseline } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Title from \"./Title\";\r\nimport Card from \"../Card\";\r\nimport InputContainer from \"../Input/InputContainer\";\r\nimport { Droppable } from \"react-beautiful-dnd\";\r\n\r\nconst useStyle = makeStyles((theme) => ({\r\n  root: {\r\n    minWidth: \"300px\",\r\n    backgroundColor: \"#EBECF0\",\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n  cardContainer: { marginTop: theme.spacing(4) },\r\n}));\r\nexport default function List({ list }) {\r\n  const classes = useStyle();\r\n  return (\r\n    <div>\r\n      <Paper className={classes.root}>\r\n        <CssBaseline />\r\n        <Title title={list.title} listId={list.id} />\r\n        <Droppable droppableId={list.id}>\r\n          {(porvided) => (\r\n            <div\r\n              ref={porvided.innerRef}\r\n              {...porvided.droppableProps}\r\n              className={classes.cardContainer}\r\n            >\r\n              {list.cards.map((card, index) => {\r\n                return <Card card={card} index={index} key={card.id} />;\r\n              })}\r\n              {porvided.placeholder}\r\n            </div>\r\n          )}\r\n        </Droppable>\r\n        <InputContainer type=\"card\" listId={list.id} />\r\n      </Paper>\r\n    </div>\r\n  );\r\n}\r\n","const cards = [\r\n  {\r\n    id: \"card-1\",\r\n    title: \"Learning how to cook\",\r\n  },\r\n  {\r\n    id: \"card-2\",\r\n    title: \"Making sandwich\",\r\n  },\r\n  {\r\n    id: \"card-3\",\r\n    title: \"Taking the trash out\",\r\n  },\r\n];\r\n\r\nconst data = {\r\n  lists: {\r\n    \"list-1\": {\r\n      id: \"list-1\",\r\n      title: \"Todooo\",\r\n      cards,\r\n    },\r\n    \"list-2\": {\r\n      id: \"list-2\",\r\n      title: \"Doing\",\r\n      cards: [],\r\n    },\r\n  },\r\n  listIds: [\"list-1\", \"list-2\"],\r\n};\r\n\r\nexport default data;\r\n","import React, { useState } from \"react\";\r\nimport { v4 as uuid } from \"uuid\";\r\nimport List from \"./components/List/List\";\r\nimport store from \"./utils/store\";\r\nimport StoreApi from \"./utils/storeApi\";\r\nimport InputContainer from \"./components/Input/InputContainer\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { DragDropContext } from \"react-beautiful-dnd\";\r\n\r\nconst useStyle = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    minHeight: \"100vh\",\r\n    background: \"gray\",\r\n    width: \"100%\",\r\n    overflowY: \"auto\",\r\n  },\r\n}));\r\nfunction App() {\r\n  const classes = useStyle();\r\n  const [data, setData] = useState(store);\r\n\r\n  //TODO: 寫入資料到store.js\r\n  //新增卡片\r\n  const addMoreCard = (title, listId) => {\r\n    console.log(title, listId);\r\n    const newCardId = uuid();\r\n    const newCard = {\r\n      id: newCardId,\r\n      title,\r\n    };\r\n\r\n    const list = data.lists[listId];\r\n    list.cards = [...list.cards, newCard];\r\n\r\n    const newState = {\r\n      ...data,\r\n      lists: {\r\n        ...data.lists,\r\n        [listId]: list,\r\n      },\r\n    };\r\n    setData(newState);\r\n  };\r\n  //TODO: 寫入資料到store.js\r\n  //新增列表\r\n  const addMoreList = (title) => {\r\n    const newListId = uuid();\r\n    const newList = {\r\n      id: newListId,\r\n      title,\r\n      cards: [],\r\n    };\r\n    const newState = {\r\n      listIds: [...data.listIds, newListId],\r\n      lists: {\r\n        ...data.lists,\r\n        [newListId]: newList,\r\n      },\r\n    };\r\n    setData(newState);\r\n  };\r\n  //更新列表的title\r\n  const updateListTitle = (title, listId) => {\r\n    const list = data.lists[listId];\r\n    list.title = title;\r\n\r\n    const newState = {\r\n      ...data,\r\n      lists: {\r\n        ...data.lists,\r\n        [listId]: list,\r\n      },\r\n    };\r\n    setData(newState);\r\n  };\r\n  //設定放下的動作\r\n  const onDragEnd = (result) => {\r\n    //取得放下時的資料\r\n    const { destination, source, draggableId } = result;\r\n    console.log(\"目的\", destination, \"來源\", source, \"抓id\", draggableId);\r\n    //如果放在可放區外\r\n    if (!destination) {\r\n      return;\r\n    }\r\n    //取得資料中的來源的列表與目的的列表\r\n    const sourceList = data.lists[source.droppableId];\r\n    const destinationList = data.lists[destination.droppableId];\r\n    //取得當下卡的資料(使用了filter回傳陣列所以取第0)\r\n    const draggingCard = sourceList.cards.filter(\r\n      (card) => card.id === draggableId\r\n    )[0];\r\n\r\n    //同列間移動的處裡邏輯\r\n    if (source.droppableId === destination.droppableId) {\r\n      sourceList.cards.splice(source.index, 1);\r\n      destinationList.cards.splice(destination.index, 0, draggingCard);\r\n      const newState = {\r\n        ...data,\r\n        lists: {\r\n          ...data.lists,\r\n          [sourceList.id]: destinationList,\r\n        },\r\n      };\r\n      setData(newState);\r\n    }\r\n    //不同列間的處裡\r\n    else {\r\n      sourceList.cards.splice(source.index, 1);\r\n      destinationList.cards.splice(destination.index, 0, draggingCard);\r\n\r\n      const newState = {\r\n        ...data,\r\n        lists: {\r\n          ...data.lists,\r\n          [sourceList.id]: sourceList,\r\n          [destinationList.id]: destinationList,\r\n        },\r\n      };\r\n      setData(newState);\r\n    }\r\n  };\r\n  return (\r\n    <StoreApi.Provider value={{ addMoreCard, addMoreList, updateListTitle }}>\r\n      <DragDropContext onDragEnd={onDragEnd}>\r\n        <div className={classes.root}>\r\n          {data.listIds.map((listId) => {\r\n            const list = data.lists[listId];\r\n            return <List list={list} key={listId} />;\r\n          })}\r\n          <InputContainer type=\"list\" />\r\n        </div>\r\n      </DragDropContext>\r\n    </StoreApi.Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <>\n    <App />\n  </>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}